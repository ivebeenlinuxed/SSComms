<?php
/**
 * API Generation for the framework
 * 
 * PHP version 5.4
 * 
 * @category  API
 * @package   Boiler
 * @author    Will Tinsdeall <will.tinsdeall@mercianlabels.com>
 * @copyright 2013 Mercian Labels
 * @license   http://www.mercianlabels.com All Rights Reserved
 * @link      http://www.mercianlabels.com
 */
namespace Controller\Api;

/**
 * Autogenerated stub for API access to the model \Model\Event
 * 
 * PHP version 5.4
 *
 * @category API
 * @package  Boiler
 * @author   ivebeenlinuxed <will.tinsdeall@mercianlabels.com>
 * @license  All Rights Reserved
 * @version  GIT: $Id$
 * @link     http://www.mercianlabels.com
 *
 */
class Event extends \System\Controller\Api\Event {
	public function add() {
		if (isset($_POST['start_date'])) {
			$start = new \DateTime($_POST['start_date']." ".$_POST['start_time']);
			$end = new \DateTime($_POST['end_date']." ".$_POST['end_time']);
			
			\Model\Event::Create(array(
					"start"=>$start->getTimestamp(),
					"end"=>$end->getTimestamp(),
					"description"=>$_POST['description'],
					"venue"=>$_POST['venue']
			));
			header("Location: /api/venue/{$_POST['venue']}");
			return;
		}
		$venue = new \Model\Venue($_GET['venue']);
		\Core\Router::loadView("api/html/event/special/add/modal", array("venue"=>$venue));
	}
	
	public function cancel() {
		if (isset($_POST['event'])) {
			$e = new \Model\Event($_POST['event']);
			$e->setAttribute("status", \Model\Event::STATUS_CANCELLED);
			header("Location: /api/venue/{$e->venue}");
			return;
		}
		$event = new \Model\Event($_GET['event']);
		\Core\Router::loadView("api/html/event/special/cancel/modal", array("event"=>$event));
	}
	
	public function move() {
		if (isset($_POST['event'])) {
			$e = new \Model\Event($_POST['event']);
			$e->setAttribute("status", \Model\Event::STATUS_MOVED);
			
			$start = new \DateTime($_POST['start_date']." ".$_POST['start_time']);
			$end = new \DateTime($_POST['end_date']." ".$_POST['end_time']);
			
			\Model\Event::Create(array(
					"start"=>$start->getTimestamp(),
					"end"=>$end->getTimestamp(),
					"description"=>$_POST['description'],
					"venue"=>$_POST['venue'],
					"status"=>\Model\Event::STATUS_AMENDMENT
			));
			
			header("Location: /api/venue/{$e->venue}");
			return;
		}

		$event = new \Model\Event($_GET['event']);
		\Core\Router::loadView("api/html/event/special/move/modal", array("event"=>$event));
	}
	
	public function repeat($id) {
		if (isset($_POST['event'])) {
			$e = new \Model\Event($id);
			$e->setAttribute("status", \Model\Event::STATUS_MOVED);
				
			$start = new \DateTime($_POST['start_date']." ".$_POST['start_time']);
			$end = new \DateTime($_POST['end_date']." ".$_POST['end_time']);
				
			\Model\Event::Create(array(
					"start"=>$start->getTimestamp(),
					"end"=>$end->getTimestamp(),
					"description"=>$_POST['description'],
					"venue"=>$_POST['venue']
			));
				
			header("Location: /api/venue/{$e->venue}");
			return;
		}
		
		\Core\Router::loadView("api/html/event/special/repeat/modal", array("event"=>$event));
	}
	
	public function delete($id) {
		if (isset($_POST['event'])) {
			$e = new \Model\Event($id);
			$venue = $e->venue;
			$e->Delete();
			header("Location: /api/venue/{$venue}");
			return;
		}
		
		\Core\Router::loadView("api/html/event/special/delete/modal", array("event"=>$event));
	}
}